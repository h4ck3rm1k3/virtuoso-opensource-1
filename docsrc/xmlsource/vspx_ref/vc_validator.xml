<refentry id="vc_validator">
  <refmeta>
  <refentrytitle>validator</refentrytitle>
  <refmiscinfo>vspx_control</refmiscinfo>
  </refmeta>
  <refnamediv>
  <refname>validator</refname>
  <refpurpose>A validator that is applied to user input.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
   <funcsynopsis id="vc_syn_validator">
    <funcprototype id="vc_proto_validator">
      <funcdef>
            &lt;<function>validator</function> <attribute>
          <parameter>name</parameter> (required) </attribute>
        <attribute>
          <parameter>annotation</parameter> (optional) </attribute>
        <attribute>
          <parameter>initial-enable</parameter> (optional) </attribute>
        <attribute>
          <parameter>enabled</parameter> (optional) </attribute>
        <attribute>
          <parameter>instantiate</parameter> (optional) </attribute>
        <attribute>
          <parameter>control-udt</parameter> (optional) </attribute>
        <attribute>
          <parameter>xsd-stub-xhtml</parameter> (optional) </attribute>
        <attribute>
          <parameter>width</parameter> (optional) </attribute>
        <attribute>
          <parameter>height</parameter> (optional) </attribute>
        <attribute>
          <parameter>test</parameter> (required) </attribute>
        <attribute>
          <parameter>min</parameter> (optional) </attribute>
        <attribute>
          <parameter>max</parameter> (optional) </attribute>
        <attribute>
          <parameter>regexp</parameter> (optional) </attribute>
        <attribute>
          <parameter>expression</parameter> (optional) </attribute>
        <attribute>
          <parameter>empty-allowed</parameter> (optional) </attribute>
        <attribute>
          <parameter>message</parameter> (optional) </attribute>
        <attribute>
          <parameter>runat</parameter> (optional) </attribute>
        <attribute>
          <parameter>debug-srcfile</parameter> (optional) </attribute>
        <attribute>
          <parameter>debug-srcline</parameter> (optional) </attribute>
        <attribute>
          <parameter>debug-log</parameter> (optional) </attribute>
 /&gt;</funcdef>
    </funcprototype>
   </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="vc_desc_validator">
  <title>Description</title>
  <para>
The validator objects are invoked when the element&#39;s control gets posted. the validator elements only make sense inside field or form types of controls.  the validators are invoked in the order given, and the first one to fail stops the invocation chain, so that no later ones are attempted.
furthermore the vc_is_valid member of the containing page class instance will be reset to false (0) to stop further processing. see also error-summary element and error-glyph attribute of field element.
</para>
  </refsect1>
  <refsect1 id="vc_attrs_validator">
  <title>Attributes</title>
  <formalpara>
   <title>name = <link linkend="vc_type_SqlName">SqlName</link>
   </title>
    <para>A page level unique name identifying a control.</para>
  </formalpara>
  <formalpara>
    <title>annotation</title>
    <para>A human readable comment.</para>
  </formalpara>
  <formalpara>
   <title>initial-enable = <link linkend="vc_type_CalculateableValue">CalculateableValue</link>
   </title>
    <para>Determines  whether  a control is initially visible. True by default. Could be data-bound to an SQL expression.</para>
  </formalpara>
  <formalpara>
   <title>enabled = <link linkend="vc_type_CalculateableValue">CalculateableValue</link>
   </title>
    <para>Determines  whether  a control is visible. True by default. Could be data-bound to an SQL expression.</para>
  </formalpara>
  <formalpara>
   <title>instantiate = <link linkend="vc_type_CalculateableValue">CalculateableValue</link>
   </title>
    <para>Determines whether a control instantiate its children. It is true by default. It could be data-bound to an SQL expression. Unlike most of calcucateable attributes, the value of this attribute for a control is calcluated before calling &#39;on-init&#39; event handler of the control; other values are calculated before calling &#39;before-data-bind&#39; event handler.</para>
  </formalpara>
  <formalpara>
   <title>control-udt = <link linkend="vc_type_SqlName">SqlName</link>
   </title>
    <para>At run time every control is represented as an instance of some user-defined type (UDT). VSPX compiles selects the UDT to use depending on name of the XML element that represents the control and maybe some of its attributes. In some specific cases the application developer may instruct VSPX compiler to use some other UDT, e.g. an application-specific UDT that is derived from the preset one. If specified, the value of &#39;control-udt&#39; attribute should be equal to the name of the desired target UDT.</para>
  </formalpara>
  <formalpara>
    <title>xsd-stub-xhtml</title>
    <para>This attribute is for internal use only. It has no effect if added to the source VSPX file.</para>
  </formalpara>
  <formalpara>
    <title>width</title>
    <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
  </formalpara>
  <formalpara>
    <title>height</title>
    <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
  </formalpara>
  <formalpara>
    <title>test</title>
    <para>The type of test to be performed, can be &#39;length&#39;, &#39;value&#39;,  &#39;regexp&#39; or &#39;sql&#39;.
</para>
  </formalpara>
  <formalpara>
    <title>min</title>
    <para>A lower limit in value and length tests
</para>
  </formalpara>
  <formalpara>
    <title>max</title>
    <para>The upper limit for value and length tests
</para>
  </formalpara>
  <formalpara>
    <title>regexp</title>
    <para>The REGEXP pattern to match field value
</para>
  </formalpara>
  <formalpara>
    <title>expression</title>
    <para>A SQL expression for validation
</para>
  </formalpara>
  <formalpara>
    <title>empty-allowed</title>
    <para>If specified as true (1) this will allow submitting an empty field
</para>
  </formalpara>
  <formalpara>
    <title>message</title>
    <para>The error message to be associated to parent control when the test represented by this validator fails.
</para>
  </formalpara>
  <formalpara>
    <title>runat</title>
    <para>Where to perform validation, at server side after posting, or at browser side when entering the values. Note that client side validators can be assigned only to input controls, hence client side form validators for inter-field integrity testing are not allowed.</para>
	  <para>Client side validators will generate client side JavaScript.</para>
</formalpara>
  <formalpara>
    <title>debug-srcfile</title>
    <para>URI of the source document where the tag comes from.</para>
  </formalpara>
  <formalpara>
    <title>debug-srcline</title>
    <para>Line number in the source document where the tag comes from.</para>
  </formalpara>
  <formalpara>
    <title>debug-log</title>
    <para>This defines what sort of data are saved to the debugging log.
</para>
  </formalpara>
  </refsect1>
  <refsect1 id="vc_udt_validator">
  <title>Declaration of type vspx_validator</title>
  <para>
</para>
  <screen>
</screen>
  </refsect1>
  <refsect1 id="vc_ex_validator">
  <title>Examples</title>
   <example id="vc_ex_validator__0">
    <title>
  Validation of text area input
</title>
    <para>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!--
 -  
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2012 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  


The form contains a v:textarea control with v:validator assigned. When the OK button is pressed,
data are posted back to the same URI so the page is instantiated again.
If validator found a violation, the message is shown right after the text input.
(The error reporting may be changed by using v:error-summary VSPX control and
by adding &#39;error-glyph&#39; attribute to the v:textarea.)

</para>
    <screen>
&lt;v:page name=&quot;validator__0&quot; xmlns:v=&quot;http://www.openlinksw.com/vspx/&quot;&gt;
  &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;VSPX samples | v:validator&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;v:form name=&quot;form1&quot; type=&quot;simple&quot; action=&quot;&quot; method=&quot;POST&quot;&gt;
        &lt;v:textarea name=&quot;ta1&quot; default=&quot;enter your text here&quot; value=&quot;--coalesce ({?&#39;ta1&#39;}, control.ufl_value)&quot;&gt;
          &lt;v:validator test=&quot;length&quot; min=&quot;0&quot; max=&quot;50&quot; message=&quot;The input length should not exceed 50 chars.&quot;/&gt;
        &lt;/v:textarea&gt;
        &lt;v:button name=&quot;submit1&quot; action=&quot;simple&quot; value=&quot;OK&quot;/&gt;
      &lt;/v:form&gt;
    &lt;/body&gt;
  &lt;/html&gt;
&lt;/v:page&gt;
</screen>
   </example>
  </refsect1>
  <tip>
  <title>See Also: Reference Material in the Tutorial:</title>
   <para>
    <ulink url="/tutorial/web/vx_s_2/date.vspx">VX-S-2</ulink>
   </para>
  </tip>
</refentry>